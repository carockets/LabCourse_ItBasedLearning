

Lesson0_0_Text = "Herzlich willkommen zu unserem Pythonlerntutorial! \n\nImmer wenn du ein Abenteuer bestanden" \
           " hast wirst du mit einer Python Lektion belohnt und kannst so spielerisch Programmieren lernen.\n"\
           "Dabei wirst du Schritt für Schritt in eine der meist verwendeten Skriptsprachen, Python, eingeführt.\n\n"\
           "Zum Verstaendnis der Aufgaben werden die Befehle und vorgegebene Begriffe in spitze Klammern <Befehl> gesetzt.\n\n\nUm eine Lektion abzuschließen und zur nächsten zu kommen, " \
           "klicke auf 'Check Code' - Hast du den richtigen Code programmiert wird dir das Ergebnis ausgegeben und der 'Weiter' Knopf wird eingeblendet. " \
           "Gibst du etwas falsches ein, wird dir eine Fehlermeldung angezeigt. \n\nDa wir im Moment keine Aufgabe gestellt haben, probiere es einfach mal aus und klicke auf 'Check Code'." \
		   "Python ist sehr sensitiv, wenn es um Leerzeichen und Groß- und Kleinschreibung geht! Achte auf Leerzeichen am Anfang, Einrückungen mit tab und das dein Ergebnis exakt der Aufgabenstellung entspricht!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

Lesson0_0_GivenCode = ""
Lesson0_0_SolutionCode = ""

Lesson0_0_StringBoolean = False
Lesson0_0_SolutionOutput =""

Lesson0_0_AddedCodeBoolean = False
Lesson0_0_AddedCode = ""

Lesson0_0_Name = "Intro"


Lesson1_0_Text = "Lektion 1.0: \n\nWillkommen zu deiner ersten Lektion.\n\n Jedes Programm muss mit der Welt kommunizieren können, " \
                  "dazu gibt es in Python die Funktion <print> (ausdrucken/ausgeben). \n\n\nDas einfächste Beispiel " \
                  "hierfür ist sich 'Hello World' ausgeben zu lassen. Hierfür muss der Befehl <print> und die gewünschte " \
                  "Ausgabe in Anführungszeichen <'Hello World'> eingegeben werden, da in diesem Fall die Ausgabe ein String (also eine Reihenfolge von Buchstaben) ist. \n\n\nAufgabe: \n\nGeben Sie folgenden Satz aus: \n" \
                  "'Python ist KEINE Schlange'.\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

Lesson1_0_GivenCode = "print 'Hello World'"
Lesson1_0_SolutionCode = "print 'Python ist KEINE Schlange'"

Lesson1_0_StringBoolean = True
Lesson1_0_SolutionOutput ="Python ist KEINE Schlange"

Lesson1_0_AddedCodeBoolean = False
Lesson1_0_Name = "Print"
    # Test Lektion Added Code
    #"\nif (x == 6):\n\t1+1\nelse:\n\tErrorlist.append('Error: Variable x hat einen falschen Wert')" \
    #"\nif (y == 4):\n\t1+1\nelse:\n\tErrorlist.append('Error: Variable y hat einen falschen Wert')"

#####################

Lesson1_1_Text = "Lektion 1.1:\n\nUm Werte und Ergebnisse in einem Programm wieder verwenden zu können," \
                 " gibt es in Programmiersprachen Variablen. \nDiese haben einen Namen und können " \
                 "mit verschiedenen Arten von Werten belegt werden. Fuer den Namen koennen " \
                 "Groß- und Kleinbuchstaben, Ziffern und das Zeichen _ (Unterstrich) verwendet werden.\n" \
                 "Das erste Zeichen darf aber keine Ziffer sein und es dürfen keine " \
                 "reservierten Wörter der Programmiersprache verwendet werden. \n\n\n" \
                 "Wie in der Mathematik kann man mit diesen Variablen die Grundrechenarten " \
                 "Addition ( + ), Subtraktion ( - ), Multiplikation ( * ) und Division ( / )  verwenden.\n" \
                 "Dabei kann sowohl mit ganzen Zahlen (Integer) als auch mit Fließkomma Zahlen " \
                 "(Floats) gerechnet werden. Bei Floats wird wie im Englischen üblich der . (Punkt) " \
                 "statt dem Komma verwendet.\n\n\n\n" \
                 "Aufgabe: \n\nWeisen Sie der Variablen x die Differenz aus 14.56 - 7 zu " \
                 "und geben sie mit <print> das Ergebnis aus. Berechnen Sie ebenfalls für y das " \
                 "Produkt von 35 * 49 und fuer z den Quotienten von 50.4 / 3.6 und geben Sie " \
                 "jeweils in dieser Reihenfolge (x,y,z) das Ergebnis aus.\n\n\n\n\n\n\n"

Lesson1_1_GivenCode = "x = 3 + 1732\nprint x"
Lesson1_1_SolutionCode = "x = 14.56 - 7\nprint x\ny = 35 * 49\nprint y\nz = 50.4 / 3.6\nprint z"

Lesson1_1_StringBoolean = True
Lesson1_1_SolutionOutput ="7.56\n1715\n14.0"

Lesson1_1_AddedCodeBoolean = True
Lesson1_1_AddedCode =  \
    "\nif (x == (14.56 - 7):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable x hat einen falschen Wert')" \
    "\nif (y == 1715):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable y hat einen falschen Wert')" \
    "\nif (z == 14.0):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable z hat einen falschen Wert')"

Lesson1_1_Name = "Integer und Rechenzeichen"



Lesson1_2_Text = "Lektion 1.1 \n\nZusätzlich zu dem normalen Divisionsoperator < / > gibt es die ganzzahlige Division. Der Operator dazu ist der < // >. " \
                 "Mit diesem wird das ganzzahlige Ergebnis der Division berechnet. Zusätzlich gibt es den Modulo Operator < % > mit dem der Rest berechnet wird.\n\n\n" \
                 "Speziell in Python 2 liefert auch schon 7/5 das ganzzahlige Ergebnis 1, dies kann aber mit 7.0/5 oder 7/5.0 umgangen werden. \n\n" \
				 "Berechne den Wert von 7 geteilt durch 5 als ganzzahlige Divison, weise ihn der Variable 'GanzeZahl' zu und gebe ihn aus.  \n\n" \
                 "Zusätzlich berechne den Rest von 7 geteilt durch 5 mit Modulo, weise ihn der Variable 'mod' zu und gebe diese aus.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

Lesson1_2_GivenCode = "GanzeZahl = 7.0 / 2"
Lesson1_2_SolutionCode = "mod = 7 % 5\nprint mod"

Lesson1_2_StringBoolean = True
Lesson1_2_SolutionOutput ="3\n2"

Lesson1_2_AddedCodeBoolean = True
Lesson1_2_AddedCode = \
    "\nif (GanzeZahl == 1.0:\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable GanzeZahl hat einen falschen Wert')" \
    "\nif (mod == 2:\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable mod hat einen falschen Wert')" \

Lesson1_2_Name = "Modulo 1"



Lesson1_3_Text = "Lektion 1.2 \n\nBevor wir nun richtig loslegen folgen noch ein paar einfache Rechenaufgaben. " \
                 "Brian wohnt 42km entfernt von Monty. Monty weiß, dass er für jeden Kilometer " \
                 "mit der Bahn 25 Cent zahlen muss. Zusätzlich benoetigt er noch ungefaehr 15 Euro um sich " \
                 "für die Reise ein Buch und eine Cola zu kaufen. Lege eine Variable mit dem Namen " \
                 "'fahrpreis' an und berechne wieviel Monty's Hin- und Rückreise (Kilometerpauschale + sonstige Ausgaben)" \
                 " kostet. Wir nehmen an, dass Monty das Buch und die Cola nur einmal kauft. \n" \
                 "Gebe den Wert der Variable auf dem Bildschirm aus. \n\n" \
                 "Monty zahlt grundsätzlich nur mit 5 Euro Scheinen.\n\n" \
                 "Wie viel Wechselgeld bekommt Monty zurück wenn er sich Fahrkarten kauft um Brian zweimal zu besuchen?" \
                 "Berechne den Wert mit Modulo (wie du es in der vorherigen Aufgabe gelernt hast) und weise ihn der Variable 'Wechselgeld' zu!\n" \
                 "Gebe anschließend die Variable 'Wechselgeld' mit <print> aus.\n\n\n\n\n\n\n\n\n\n\n\n\n\n"

Lesson1_3_GivenCode = "fahrpreis = \nWechselgeld = "
Lesson1_3_SolutionCode = "fahrpreis = ((42 * 0.25) * 2) + 15\nprint(fahrpreis)\nWechselgeld = (fahrpreis *2)%5"

Lesson1_3_StringBoolean = True
Lesson1_3_SolutionOutput ="36\n2"

Lesson1_3_AddedCodeBoolean = True
Lesson1_3_AddedCode = \
    "\nif (fahrpreis == ((42 * 0.25) * 2) + 15):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable fahrpreis hat einen falschen Wert')" \
    "\nif (Wechselgeld == 2):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable Wechselgeld hat einen falschen Wert')" \

Lesson1_3_Name = "Modulo 2"



Lesson1_4_Text = "Lektion 1.3: \n\nUm nicht nur mit Zahlen arbeiten zu können, sondern auch mit Texten gibt es auch Variablen " \
                 "für Zeichenketten (Strings). Die Zuweisung erfolgt dadurch, dass die Entsprechende Zeichenkette " \
                 "in 'String' (Anführungsstrichen) gesetzt wird. Fuer Zeichenketten gibt es Operationen + und *. " \
                 "Bei + werden die Inhalte zweier Stringvariablen aneinander gehängt, bei * kann die " \
                 "Stringvariable mit einer ganzen Zahl multipliziert werden. \n\n\n\nAufgabe:\n\n" \
                 "Geben sie in das Schriftfeld den Variablennamen <bunteblume> ein und  belegen Sie ihn " \
                 "indem sie den Wert 'Rot' und den Wert 'gelb' addieren. \n\nWeißen sie den Variablen <glueck> " \
                 "den Wert 'toi ' (Vergiss nicht das Leerzeichen nach 'toi'!)und <wunsch> den Wert 'fuer die Pruefung' zu. \n\nMutlipliziere <glueck> mit 3 und addiere dies zu <wunsch> " \
                 "hinzu und weisen sie das Ergebnis <glueckwunsch> zu. \n\n\n\n\n\n\n\n\n\n\n"

Lesson1_4_GivenCode = "blume = 'Gruen'\nprint blume\n\nHeyhey ='Hello '+'World'\nprint Heyhey\n\ncolours = 'red'*3\nprint colours"
Lesson1_4_SolutionCode = "bunteblume = 'Rot' + 'gelb'\nglueck = 'toi'\nwunsch = ' fuer die Pruefung'\nglueckwunsch= glueck'*3 + wunsch"

Lesson1_4_StringBoolean = True
Lesson1_4_SolutionOutput ="toi toi toi fuer die Pruefung"

Lesson1_4_AddedCodeBoolean = True
Lesson1_4_AddedCode = \
    "\nif (glueck == 'toi '):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable glueck hat einen falschen Wert')" \
    "\nif (wunsch == 'fuer die Pruefung'):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable glueck hat einen falschen Wert')" \
    "\nif (glueckwunsch == 'toi toi toi fuer die Pruefung'):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable glueckwunsch hat einen falschen Wert')" \
    "\nif (bunteblume == 'Rotgelb'):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable bunteblume hat einen falschen Wert')"
    #"\nif (glueck == 'toi'):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable glueck hat einen falschen Wert')"

Lesson1_4_Name = "String Variablen"



Lesson1_5_Text = "Lektion 1.4 \n\nMit den Rechenoperationen hast du nun eigentlich schon das wichtigste gelernt. An dieser Stelle wollen wir uns einem anderen, " \
                 "auch sehr wichtigem Thema annehmen -- Kommentaren. Manchmal kann es sehr nützlich sein, im Code Erklärungen hinzuzufügen, " \
                 "damit andere Leute verstehen, was der Code macht oder was sich der Programmierer dabei gedacht hat. Manchmal braucht der Programmierer selber bei über 1000 Zeilen Code auch einfach" \
                 "nur eine Gedächtnisstütze. \n\n\n\n" \
                 "Dieser Text soll natürlich bei der Ausführung des Programmes vom Computer ignoriert werden, auch wenn sich Befehle im Kommentar befinden. Kommentare werden in " \
                 "Python mit dem Symbol < # > eingeleitet. Sofern dieses Symbol auftaucht, wird der restliche Text in dieser Zeile vom Computer ignoriert. \n\n\n" \
                 "Die nächste Aufgabe ist einfach: Schreibe ein paar Kommentare in den Code-Bereich und drücke auf 'Check Code'\n\n\n\n\n\n\n\n\n\n\n\n"



Lesson1_5_GivenCode = "# print 'Das hier ist ein Kommentar und wird von Python ignoriert'"
Lesson1_5_SolutionCode = ""

Lesson1_5_StringBoolean = True
Lesson1_5_SolutionOutput =""

Lesson1_5_AddedCodeBoolean = False
Lesson1_5_AddedCode = ""

Lesson1_5_Name = "Kommentare"




Lesson1_6_Text = "Lektion 1.5 \n\nMit Kommentaren selbst kannst du natuerlich nichts programmieren, deswegen nehmen wir uns " \
                 "jetzt wieder einem sehr essentiellem Thema an, und zwar Listen. \n\n\nListen sind besondere Datenstrukturen. " \
                 "In ihnen koönen mehrere Werte gespeichert werden. Der Zugriff auf diese Werte erfolgt mit einem Index " \
                 "(die Stelle in der Liste, an der der Wert gespeichert ist  beginnend bei 0 !). \n\nEine Liste wird mit [] definiert." \
                 "Monty hat nun seine Fahrkarten gekauft und muss jetzt seinen Koffer packen. Er will folgende Dinge mitnehmen: " \
                 "Eine Hose, ein Hemd, eine Jacke, Socken, Schuhe und natürlich seine Zahnbürste. \n\n\n\nLege eine Variable mit dem Namen " \
                 "'gepaeck' an und füge sämtliche Gegenstaende hinzu. Lasse anschließend die Liste auf dem Bildschirm ausgeben\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"



Lesson1_6_GivenCode = "liste = []\nliste = [0, 1, 2, 3]\nprint liste[2] # Die dritte (!) Stelle wird ausgegeben. "
Lesson1_6_SolutionCode = "gepaeck = [Hose, Hemd, Jacke, Socken, Schuhe, Zahnbuerste]\nprint(gepaeck)"

Lesson1_6_StringBoolean = True
Lesson1_6_SolutionOutput ="[Hose, Hemd, Jacke, Socken, Schuhe, Zahnbuerste]"

Lesson1_6_AddedCodeBoolean = True
Lesson1_6_AddedCode = "" \
                      "\nif (gepaeck == [Hose, Hemd, Jacke, Socken, Schuhe, Zahnbuerste]):\n\t 1+1\nelse:\n\tErrorlist.append('Error: Variable gepaeck hat einen falschen Wert')"


Lesson1_6_Name = "Listen"
